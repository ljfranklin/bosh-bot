---
shared:
  - &failure-alert
    put: slack-alert
    params:
      silent: true
      icon_emoji: ":interrobang:"
      text: |
        *The <$ATC_EXTERNAL_URL/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_JOB_NAME> job failed!*

resources:
  - name: bosh-bot
    type: git
    source:
      uri: git@github.com:ljfranklin/bosh-bot.git
      branch: master
      private_key: {{bosh_bot_deploy_key}}
  - name: slack-alert
    type: slack-notification
    source:
      url: {{slack_integration_url}}
  - name: version
    type: semver
    source:
      bucket: {{semver_bucket}}
      access_key_id: {{semver_access_key}}
      secret_access_key: {{semver_secret_key}}
      region_name: {{semver_region}}
      endpoint: {{semver_endpoint}}
      key: {{semver_bucket_key}}
      initial_version: "0.0.1"
  - name: release
    type: s3
    source:
      bucket: {{release_bucket}}
      access_key_id: {{release_access_key}}
      secret_access_key: {{release_secret_key}}
      region_name: {{release_region}}
      endpoint: {{release_endpoint}}
      regexp: bosh-bot-(.*).tgz

resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest
  - name: s3
    type: docker-image
    source:
      repository: ljfranklin/s3-resource
      tag: pr-gcs-multipart

jobs:
  - name: test-unit
    plan:
      - get: bosh-bot
        trigger: true
      - task: test-unit
        file: bosh-bot/ci/tasks/test-unit.yml
    on_failure: *failure-alert

  - name: test-integration
    serial: true
    plan:
      - get: bosh-bot
        trigger: true
        passed: [test-unit]
      - task: test-integration
        file: bosh-bot/ci/tasks/test-integration.yml
        params:
          BOSH_BOT_S3_BUCKET:             {{bosh_bot_s3_bucket}}
          BOSH_BOT_S3_ACCESS_KEY:         {{bosh_bot_s3_access_key}}
          BOSH_BOT_S3_SECRET_KEY:         {{bosh_bot_s3_secret_key}}
          BOSH_BOT_S3_ENDPOINT:           {{bosh_bot_s3_endpoint}}
          BOSH_BOT_CI_CLIENT_BOT_NAME:    {{bosh_bot_ci_client_bot_name}}
          BOSH_BOT_CI_CLIENT_SLACK_TOKEN: {{bosh_bot_ci_client_slack_token}}
          BOSH_BOT_CI_SERVER_BOT_NAME:    {{bosh_bot_ci_server_bot_name}}
          BOSH_BOT_CI_SERVER_SLACK_TOKEN: {{bosh_bot_ci_server_slack_token}}
          BOSH_BOT_CI_CHANNEL:            {{bosh_bot_ci_channel}}
          BOSH_BOT_CI_DIRECTOR_ADDRESS:   {{bosh_bot_ci_director_address}}
          BOSH_BOT_CI_DIRECTOR_USER:      {{bosh_bot_ci_director_user}}
          BOSH_BOT_CI_DIRECTOR_PASSWORD:  {{bosh_bot_ci_director_password}}
          BOSH_BOT_CI_STEMCELL_ID:        {{bosh_bot_ci_stemcell_id}}
          BOSH_BOT_CI_DEPLOY_KEY:         {{bosh_bot_ci_deploy_key}}
    on_failure: *failure-alert

  - name: publish-rc-release
    plan:
      - get: bosh-bot
        trigger: true
        passed: [test-integration]
      - get: version
        params:
          pre: rc
      - task: create-release
        file: bosh-bot/ci/tasks/create-release.yml
      - put: release
        params:
          file: "created-release/*.tgz"
          acl: "public-read"
      - put: version
        params: {file: version/version}
    on_failure: *failure-alert

  - name: publish-patch-release
    plan:
      - get: rc-release
        resource: release
        passed: [publish-rc-release]
      - get: bosh-bot
      - get: version
        params:
          bump: patch
      - &finalize-release
        do:
          - task: finalize-release
            file: bosh-bot/ci/tasks/finalize-release.yml
            params:
              BLOBSTORE_ACCESS_KEY: {{release_access_key}}
              BLOBSTORE_SECRET_ACCESS_KEY: {{release_secret_key}}
              GIT_USER_NAME: {{release_git_user_name}}
              GIT_USER_EMAIL: {{release_git_user_email}}
          - put: release
            params:
              file: "finalized-release/*.tgz"
              acl: "public-read"
          - put: version
            params: {file: version/version}
          - task: bump-release-in-manifest
            file: bosh-bot/ci/tasks/bump-release-in-manifest.yml
            input_mapping:
              bosh-bot: updated-bosh-bot
            output_mapping:
              updated-bosh-bot: final-bosh-bot
            params:
              GIT_USER_NAME: {{release_git_user_name}}
              GIT_USER_EMAIL: {{release_git_user_email}}
          - put: bosh-bot
            params:
              repository: final-bosh-bot
              merge: true
              tag_prefix: v
              tag: version/version
    on_failure: *failure-alert

  - name: publish-minor-release
    plan:
      - get: rc-release
        resource: release
        passed: [publish-rc-release]
      - get: bosh-bot
      - get: version
        params:
          bump: minor
      - *finalize-release
    on_failure: *failure-alert

  - name: publish-major-release
    plan:
      - get: rc-release
        resource: release
        passed: [publish-rc-release]
      - get: bosh-bot
      - get: version
        params:
          bump: major
      - *finalize-release
    on_failure: *failure-alert
